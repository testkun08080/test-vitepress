import{_ as t,c as l,o as r,ag as i}from"./chunks/framework.DlGnLQc4.js";const c=JSON.parse('{"title":"AI システム","description":"","frontmatter":{},"headers":[],"relativePath":"programming/ai-system.md","filePath":"programming/ai-system.md"}'),o={name:"programming/ai-system.md"};function n(s,a,e,g,h,u){return r(),l("div",null,a[0]||(a[0]=[i('<h1 id="ai-システム" tabindex="-1">AI システム <a class="header-anchor" href="#ai-システム" aria-label="Permalink to &quot;AI システム&quot;">​</a></h1><p>ゲームAIは、プレイヤーに挑戦と没入感を提供するために、ノンプレイヤーキャラクター（NPC）や環境に知的な振る舞いを実装するシステムです。効果的なゲームAIは、リアルな反応を示しながらも、ゲームプレイを向上させるように設計されています。</p><h2 id="aiの基本コンポーネント" tabindex="-1">AIの基本コンポーネント <a class="header-anchor" href="#aiの基本コンポーネント" aria-label="Permalink to &quot;AIの基本コンポーネント&quot;">​</a></h2><h3 id="意思決定システム" tabindex="-1">意思決定システム <a class="header-anchor" href="#意思決定システム" aria-label="Permalink to &quot;意思決定システム&quot;">​</a></h3><p>NPCがどのように行動を選択するかを決定するシステム。</p><ul><li><strong>有限状態機械 (FSM)</strong>: 状態と遷移で定義される単純な決定モデル</li><li><strong>行動木</strong>: 階層的なタスク実行のための柔軟な構造</li><li><strong>ユーティリティAI</strong>: 各行動の「有用性」に基づく選択</li><li><strong>ゴール指向行動計画 (GOAP)</strong>: 目標達成のための動的な計画立案</li><li><strong>モンテカルロ木探索</strong>: ゲーム状態の可能性を探索する確率的手法</li></ul><h3 id="知覚システム" tabindex="-1">知覚システム <a class="header-anchor" href="#知覚システム" aria-label="Permalink to &quot;知覚システム&quot;">​</a></h3><p>NPCが環境とプレイヤーを認識する方法。</p><ul><li><strong>視覚</strong>: 視線、視野角、視距離のシミュレーション</li><li><strong>聴覚</strong>: 音の検出と位置特定</li><li><strong>記憶</strong>: 過去の知覚情報の保存と忘却</li><li><strong>通信</strong>: NPCグループ間での情報共有</li></ul><h3 id="移動システム" tabindex="-1">移動システム <a class="header-anchor" href="#移動システム" aria-label="Permalink to &quot;移動システム&quot;">​</a></h3><p>NPCが環境内を移動する方法。</p><ul><li><strong>パスファインディング</strong>: A*、ダイクストラなどのアルゴリズム</li><li><strong>ナビゲーションメッシュ</strong>: 歩行可能な領域の表現</li><li><strong>障害物回避</strong>: 動的障害物との衝突防止</li><li><strong>群れ行動</strong>: 複数のエージェントの協調移動</li><li><strong>ステアリング行動</strong>: 追跡、逃避、回避などの基本動作</li></ul><h2 id="aiの実装テクニック" tabindex="-1">AIの実装テクニック <a class="header-anchor" href="#aiの実装テクニック" aria-label="Permalink to &quot;AIの実装テクニック&quot;">​</a></h2><h3 id="レベルオブディテール-lod" tabindex="-1">レベルオブディテール (LOD) <a class="header-anchor" href="#レベルオブディテール-lod" aria-label="Permalink to &quot;レベルオブディテール (LOD)&quot;">​</a></h3><p>プレイヤーからの距離に基づいてAIの複雑さを調整する手法。</p><ul><li><strong>近距離</strong>: 完全なAIシミュレーション</li><li><strong>中距離</strong>: 簡略化されたAI</li><li><strong>遠距離</strong>: 最小限の更新または完全な休止</li></ul><h3 id="インフルエンスマップ" tabindex="-1">インフルエンスマップ <a class="header-anchor" href="#インフルエンスマップ" aria-label="Permalink to &quot;インフルエンスマップ&quot;">​</a></h3><p>空間上の様々な要因の影響を表現するグリッドベースのデータ構造。</p><ul><li><strong>領域制御</strong>: 各プレイヤーやチームの支配領域</li><li><strong>危険度</strong>: 敵や危険な環境要素からの脅威</li><li><strong>資源</strong>: 重要なアイテムや目標の位置</li><li><strong>履歴</strong>: 過去の活動や出来事の痕跡</li></ul><h3 id="機械学習の応用" tabindex="-1">機械学習の応用 <a class="header-anchor" href="#機械学習の応用" aria-label="Permalink to &quot;機械学習の応用&quot;">​</a></h3><ul><li><strong>教師あり学習</strong>: 人間のプレイデータからのパターン学習</li><li><strong>強化学習</strong>: 試行錯誤を通じた最適戦略の発見</li><li><strong>ニューラルネットワーク</strong>: 複雑なパターン認識と意思決定</li><li><strong>進化的アルゴリズム</strong>: 自然選択に基づくAI行動の最適化</li></ul><h2 id="aiのバランス調整" tabindex="-1">AIのバランス調整 <a class="header-anchor" href="#aiのバランス調整" aria-label="Permalink to &quot;AIのバランス調整&quot;">​</a></h2><ul><li><strong>難易度スケーリング</strong>: プレイヤースキルに応じたAI能力の調整</li><li><strong>予測可能性</strong>: 完全にランダムでも完全に決定論的でもない適度な予測可能性</li><li><strong>人間らしさ</strong>: 完璧すぎない、人間らしい誤りや限界の模倣</li><li><strong>ラバーバンディング</strong>: プレイヤーとの能力差を動的に調整</li></ul><h2 id="デバッグとプロファイリング" tabindex="-1">デバッグとプロファイリング <a class="header-anchor" href="#デバッグとプロファイリング" aria-label="Permalink to &quot;デバッグとプロファイリング&quot;">​</a></h2><ul><li><strong>可視化ツール</strong>: AI状態、パス、意思決定の視覚的表示</li><li><strong>ログ記録</strong>: 重要なAI決定と理由の記録</li><li><strong>リプレイシステム</strong>: 問題のある状況の再現と分析</li><li><strong>ユニットテスト</strong>: 個々のAIコンポーネントの検証</li></ul><h2 id="参考資料" tabindex="-1">参考資料 <a class="header-anchor" href="#参考資料" aria-label="Permalink to &quot;参考資料&quot;">​</a></h2><ul><li>&quot;Artificial Intelligence for Games&quot; by Ian Millington and John Funge</li><li>&quot;Game AI Pro&quot; シリーズ (編集: Steve Rabin)</li><li>&quot;Programming Game AI by Example&quot; by Mat Buckland</li></ul>',27)]))}const m=t(o,[["render",n]]);export{c as __pageData,m as default};
