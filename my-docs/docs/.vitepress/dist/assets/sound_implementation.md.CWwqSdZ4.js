import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.DlGnLQc4.js";const g=JSON.parse('{"title":"実装","description":"","frontmatter":{},"headers":[],"relativePath":"sound/implementation.md","filePath":"sound/implementation.md"}'),t={name:"sound/implementation.md"};function h(p,s,e,k,r,E){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="実装" tabindex="-1">実装 <a class="header-anchor" href="#実装" aria-label="Permalink to &quot;実装&quot;">​</a></h1><p>ゲームオーディオの実装は、サウンドデザインの創造的側面と技術的側面を橋渡しする重要なプロセスです。効果的なオーディオ実装により、ゲーム内の音が動的に反応し、プレイヤーの没入感を高め、ゲームプレイ体験を向上させることができます。</p><h2 id="オーディオ実装の基本概念" tabindex="-1">オーディオ実装の基本概念 <a class="header-anchor" href="#オーディオ実装の基本概念" aria-label="Permalink to &quot;オーディオ実装の基本概念&quot;">​</a></h2><h3 id="オーディオエンジン" tabindex="-1">オーディオエンジン <a class="header-anchor" href="#オーディオエンジン" aria-label="Permalink to &quot;オーディオエンジン&quot;">​</a></h3><p>ゲーム内でサウンドを再生、管理、処理するためのシステム。</p><ul><li><strong>ネイティブエンジン</strong>: Unity Audio, Unreal Audio など組み込みシステム</li><li><strong>ミドルウェア</strong>: FMOD, Wwise などの専用オーディオソリューション</li><li><strong>カスタムソリューション</strong>: 特定のニーズに合わせて開発された独自システム</li></ul><h3 id="サウンドアセット管理" tabindex="-1">サウンドアセット管理 <a class="header-anchor" href="#サウンドアセット管理" aria-label="Permalink to &quot;サウンドアセット管理&quot;">​</a></h3><ul><li><strong>ファイル形式</strong>: WAV, OGG, MP3 などの選択と最適化</li><li><strong>サンプルレート</strong>: 44.1kHz, 48kHz などの品質設定</li><li><strong>ビット深度</strong>: 16-bit, 24-bit などの解像度</li><li><strong>チャンネル構成</strong>: モノ, ステレオ, サラウンドの適切な選択</li></ul><h3 id="再生メカニズム" tabindex="-1">再生メカニズム <a class="header-anchor" href="#再生メカニズム" aria-label="Permalink to &quot;再生メカニズム&quot;">​</a></h3><ul><li><strong>ワンショット</strong>: 一度だけ再生される効果音</li><li><strong>ループ</strong>: 継続的に繰り返される背景音や環境音</li><li><strong>ストリーミング</strong>: ディスクから直接再生される大きなファイル</li><li><strong>インタラクティブ</strong>: プレイヤーの行動や状態に応じて変化する音</li></ul><h2 id="高度な実装技術" tabindex="-1">高度な実装技術 <a class="header-anchor" href="#高度な実装技術" aria-label="Permalink to &quot;高度な実装技術&quot;">​</a></h2><h3 id="パラメトリックオーディオ" tabindex="-1">パラメトリックオーディオ <a class="header-anchor" href="#パラメトリックオーディオ" aria-label="Permalink to &quot;パラメトリックオーディオ&quot;">​</a></h3><p>リアルタイムパラメータに基づいて音を動的に変化させる技術。</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 疑似コード例: 速度に基づくエンジン音の調整</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> updateEngineSound</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">vehicle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rpm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> vehicle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCurrentRPM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> load</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> vehicle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getEngineLoad</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  engineSound.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setPitch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mapRange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rpm, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  engineSound.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setFilter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mapRange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(load, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  engineSound.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setVolume</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mapRange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rpm, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="サウンドキューイングシステム" tabindex="-1">サウンドキューイングシステム <a class="header-anchor" href="#サウンドキューイングシステム" aria-label="Permalink to &quot;サウンドキューイングシステム&quot;">​</a></h3><p>複数の音を組み合わせて複雑なサウンドイベントを作成するシステム。</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 疑似コード例: 爆発サウンドキュー</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> playExplosionCue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 主要な爆発音</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mainBlast</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> playSound</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;explosion_main&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, position);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  mainBlast.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setVolume</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 衝撃波</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> shockwave</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> playSound</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;explosion_shockwave&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, position);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  shockwave.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setPitch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> size);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 破片音</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> debrisCount</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">floor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> debrisCount; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> debris</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> playSound</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;explosion_debris&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">calculateDebrisPosition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(position, i));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      debris.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setPitch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.9</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">random</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 残響</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> reverb</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> playSound</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;explosion_reverb&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, position);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    reverb.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setVolume</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h3 id="ミキシングとdsp" tabindex="-1">ミキシングとDSP <a class="header-anchor" href="#ミキシングとdsp" aria-label="Permalink to &quot;ミキシングとDSP&quot;">​</a></h3><p>オーディオ信号の処理とバランス調整のためのシステム。</p><ul><li><strong>ミキシングバス</strong>: 関連するサウンドをグループ化するチャンネル</li><li><strong>エフェクトチェーン</strong>: リバーブ、EQ、コンプレッションなどの処理</li><li><strong>ダイナミックミキシング</strong>: 状況に応じた音量バランスの自動調整</li><li><strong>ダッキング</strong>: 重要な音（ダイアログなど）が他の音を一時的に抑える</li></ul><h3 id="空間オーディオ" tabindex="-1">空間オーディオ <a class="header-anchor" href="#空間オーディオ" aria-label="Permalink to &quot;空間オーディオ&quot;">​</a></h3><p>3D空間内での音の位置と伝播をシミュレートする技術。</p><ul><li><strong>3Dポジショニング</strong>: 音源の位置に基づく定位</li><li><strong>距離モデル</strong>: 距離に応じた音量と周波数特性の変化</li><li><strong>オクルージョン/オブストラクション</strong>: 障害物による音の遮蔽と変化</li><li><strong>リバーブゾーン</strong>: 異なる音響環境を持つ領域の定義</li><li><strong>アンビソニクス/バイノーラル</strong>: 高度な3D音響シミュレーション</li></ul><h2 id="実装ワークフロー" tabindex="-1">実装ワークフロー <a class="header-anchor" href="#実装ワークフロー" aria-label="Permalink to &quot;実装ワークフロー&quot;">​</a></h2><h3 id="設計段階" tabindex="-1">設計段階 <a class="header-anchor" href="#設計段階" aria-label="Permalink to &quot;設計段階&quot;">​</a></h3><ul><li><strong>サウンドデザインドキュメント</strong>: オーディオの全体的なビジョンと要件</li><li><strong>アセットリスト</strong>: 必要なすべてのサウンドファイルの計画</li><li><strong>技術仕様</strong>: サンプルレート、チャンネル数、圧縮設定などの定義</li><li><strong>インテグレーション計画</strong>: ゲームコードとオーディオシステムの連携方法</li></ul><h3 id="実装段階" tabindex="-1">実装段階 <a class="header-anchor" href="#実装段階" aria-label="Permalink to &quot;実装段階&quot;">​</a></h3><ul><li><strong>基本システム構築</strong>: オーディオエンジンの初期化と設定</li><li><strong>サウンドバンク作成</strong>: 関連するサウンドのグループ化と管理</li><li><strong>パラメータ定義</strong>: 動的な音響変化のためのパラメータ設定</li><li><strong>イベント連携</strong>: ゲームイベントとサウンド再生のリンク</li></ul><h3 id="テストと最適化" tabindex="-1">テストと最適化 <a class="header-anchor" href="#テストと最適化" aria-label="Permalink to &quot;テストと最適化&quot;">​</a></h3><ul><li><strong>オーディオデバッグ</strong>: 再生問題や不適切な動作の特定</li><li><strong>ミキシング調整</strong>: 全体的な音量バランスの微調整</li><li><strong>パフォーマンス最適化</strong>: CPU使用率とメモリ使用量の最適化</li><li><strong>プラットフォーム固有の調整</strong>: 異なるデバイスやシステムへの対応</li></ul><h2 id="fmod-wwiseの実装例" tabindex="-1">FMOD/Wwiseの実装例 <a class="header-anchor" href="#fmod-wwiseの実装例" aria-label="Permalink to &quot;FMOD/Wwiseの実装例&quot;">​</a></h2><h3 id="fmod-studio" tabindex="-1">FMOD Studio <a class="header-anchor" href="#fmod-studio" aria-label="Permalink to &quot;FMOD Studio&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 疑似コード例: FMODでのイベント再生</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> playFootstep</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">character</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 表面タイプの検出</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> surfaceType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> detectSurface</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(character.position);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // イベントインスタンスの作成</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> eventInstance</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> FMODSystem.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;event:/character/footsteps&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // パラメータの設定</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  eventInstance.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setParameter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Surface&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">surfaceTypeToValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(surfaceType));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  eventInstance.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setParameter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Weight&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, character.weight);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  eventInstance.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setParameter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Speed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, character.velocity.magnitude);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 3D属性の設定</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  eventInstance.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set3DAttributes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">convertToFMODPosition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(character.position));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 再生</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  eventInstance.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 必要に応じてインスタンスを追跡（停止などのため）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> eventInstance;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h3 id="wwise" tabindex="-1">Wwise <a class="header-anchor" href="#wwise" aria-label="Permalink to &quot;Wwise&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 疑似コード例: Wwiseでのイベント再生</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> playWeaponFire</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">weapon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">player</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // イベントの投稿</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  AK</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PostEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Play_Weapon_Fire&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, weapon.audioObject);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // RTPCの設定（リアルタイムパラメータコントロール）</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  AK</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SetRTPC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Weapon_Heat&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, weapon.heatLevel, weapon.audioObject);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  AK</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SetRTPC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Player_Stamina&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, player.staminaLevel, player.audioObject);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // スイッチの設定</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  AK</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SetSwitch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Weapon_Type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, weapon.type, weapon.audioObject);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ステートの設定（グローバル環境状態）</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  AK</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SetState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Combat_Intensity&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">determineCombatIntensity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="最適化テクニック" tabindex="-1">最適化テクニック <a class="header-anchor" href="#最適化テクニック" aria-label="Permalink to &quot;最適化テクニック&quot;">​</a></h2><h3 id="メモリ管理" tabindex="-1">メモリ管理 <a class="header-anchor" href="#メモリ管理" aria-label="Permalink to &quot;メモリ管理&quot;">​</a></h3><ul><li><strong>動的ローディング</strong>: 必要に応じてサウンドをロード/アンロード</li><li><strong>ストリーミング閾値</strong>: 一定サイズ以上のファイルを自動的にストリーミング</li><li><strong>メモリプール</strong>: 事前に割り当てられたメモリ領域での効率的な管理</li><li><strong>アセット圧縮</strong>: 適切な圧縮設定による容量削減</li></ul><h3 id="cpu最適化" tabindex="-1">CPU最適化 <a class="header-anchor" href="#cpu最適化" aria-label="Permalink to &quot;CPU最適化&quot;">​</a></h3><ul><li><strong>ボイスリミット</strong>: 同時再生数の制限と優先順位付け</li><li><strong>距離カリング</strong>: 遠い音源の処理を簡略化または停止</li><li><strong>DSP負荷管理</strong>: 処理負荷の高いエフェクトの選択的適用</li><li><strong>更新頻度の最適化</strong>: 重要度に応じた更新レートの調整</li></ul><h3 id="プラットフォーム固有の最適化" tabindex="-1">プラットフォーム固有の最適化 <a class="header-anchor" href="#プラットフォーム固有の最適化" aria-label="Permalink to &quot;プラットフォーム固有の最適化&quot;">​</a></h3><ul><li><strong>モバイル</strong>: バッテリー消費とメモリ制限への対応</li><li><strong>コンソール</strong>: プラットフォーム固有のオーディオハードウェアの活用</li><li><strong>VR/AR</strong>: 空間オーディオの処理負荷とレイテンシの最適化</li></ul><h2 id="参考資料" tabindex="-1">参考資料 <a class="header-anchor" href="#参考資料" aria-label="Permalink to &quot;参考資料&quot;">​</a></h2><ul><li>&quot;Game Audio Implementation&quot; by Richard Stevens and Dave Raybould</li><li>&quot;Practical Game Audio Programming&quot; by Guy Somberg</li><li>&quot;The Essential Guide to Game Audio&quot; by Steve Horowitz and Scott R. Looney</li><li>FMOD and Wwise 公式ドキュメント</li></ul>`,44)]))}const o=i(t,[["render",h]]);export{g as __pageData,o as default};
